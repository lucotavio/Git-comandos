1 - Criando um repositorio
    git init

2 - Adicionando um arquivo não rastreado para área de stage
    ex: git add [nome-do-arquivo]

3 - Ver situação dos arquivos no repositorio do Git
    git status

4 - Adicionando varios arquivos não rastreado ao stage
    ex: git add .

5 - Comitando os arquivos que foram alterados
    git commit -m "[mensagem]"
    ex: git commit -m "Primeiro Commit"

6 - Adicionando varios arquivos não rastreados para área de stage e comitando os arquivos que foram alterados
    git commit -a -m "[mensagem]"
    ex: git commit -a -m "Primeiro Commit"

7 - Adicinando repositorio remoto do Git Hub
    git remote add origin [URl do repositorio]
    ex:git remote add origin https://github.com/luc-udemy/curso_git_1.git

8 - Enviando commits para o Git Hub
    git push -u origin main

9 - Buscando alterações no repositorio do Git Hub para sincronizar com repositorio remoto
    git pull

10 - Clonando repositorios do Git Hub
     git clone [URl do repositorio]
     ex: git clone https://github.com/luc-udemy/curso_git_1.git

11 - Deletando arquvos nomitorados
     git rm [nome-do-arquivo]
     ex: git rm Cliente.java

12 - Ver os Logs dos commits realizados
     git Logs

13 - Alterando nome de um arquivo 
     git mv [nome-do-arquivo]
     git mv Pessoa.java Cliente.java

14 - Movendo arquivos para outra pasta
     git mv [nome-do-arquivo] [pasta/nome-do-arquivo]
     git mv Pessoa.java /entidade/Pessoa.java

15 - Desfazendo as mudaças feitas em um arquivo
     git checkout [nome-do-arquivo]
     ex: git checkout index.html

16 - Visualizando as branchs disponiveis
     git branch

17 - Criando uma nova branch 
     git branch [nome-da-branch]
     ex: git branch crud_cliente
     OBS: Antes de fazer esse comando tenha sempre certeza que vc esta na branch main
          depois de o comando git pull, depois de fazer esses passos vc pode criar
          uma nova branch

18 - Resetando mudanças feitas tanto em arquivos commitados e arquivos não commitados
     git reset --hard [branch]
     ex: git reset --hard origin/main

19 - Deletando um branch
     git branch -d [nome-da-branch]
     ex: git branch -d crud_cliente 
    
20 - Mudando de branch
     git checkout [nome-da-branch]
     ex: git checlout crud_cliente

21 - Criando e mudando de branch
     git checkout -b [nome-da-branch]
     ex: git checkout -b crud_cliente
     OBS: Antes de fazer esse comando tenha sempre certeza que vc esta na branch main
           depois de o comando git pull, depois de fazer esses passos vc pode criar
           uma nova branch

22 - Fazer merge de branch
     git merge [nome-da-branch]
     git merge crud_cliente
     OBS: Tenha certeza que voçê esta na branch main

24 - Salvar o codigo aual para prosseguir em uma nova abordagem
     git stash
     
25 - Listando as stashs
     git list stash
     
26 - Recuperando uma stash 
     git stash apply [numero-da-stash]
     ex: git stash apply 0
     
27 - Observar as modificações que foram feitas na stash
     git stash show -p [numero-da-stash]
     ex: git stash show -p 1

28 - Remover todas as stashs 
     git stash clear
     
29 - Remover uma stash especifíca
     git stash drop [numero-dastash]
     git stash drop 1
     
30 - Criando uma tag
     git tag -a [nome-da-tag] -m "[menssagem]"
     ex: git tag -a v1.0 -m "Primeira versao"
     OBS: Commitar a tag em seguencia
     
31 - Ver as Tags existentes
     git tag
     
32 - Mudar de tag
     git checkout [nome-da-tag]
     ex: git checkout v2.0
